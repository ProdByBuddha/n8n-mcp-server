{
  "openapi": "3.0.0",
  "info": {
    "title": "n8n Public API",
    "description": "Standardized public API for n8n automation platform.",
    "version": "1.1.1",
    "contact": {
      "email": "hello@n8n.io"
    },
    "license": {
      "name": "Sustainable Use License",
      "url": "https://github.com/n8n-io/n8n/blob/master/LICENSE.md"
    },
    "termsOfService": "https://n8n.io/legal/terms"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about users"
    },
    {
      "name": "Audit",
      "description": "Operations about security audit"
    },
    {
      "name": "Execution",
      "description": "Operations about executions"
    },
    {
      "name": "Workflow",
      "description": "Operations about workflows"
    },
    {
      "name": "Credential",
      "description": "Operations about credentials"
    },
    {
      "name": "Tags",
      "description": "Operations about tags"
    },
    {
      "name": "SourceControl",
      "description": "Operations about source control"
    },
    {
      "name": "Variables",
      "description": "Operations about variables"
    },
    {
      "name": "Projects",
      "description": "Operations about projects"
    }
  ],
  "externalDocs": {
    "description": "n8n API documentation",
    "url": "https://docs.n8n.io/api/"
  },
  "paths": {
    "/audit": {
      "post": {
        "operationId": "generateAudit",
        "tags": [
          "Audit"
        ],
        "summary": "Generate an audit",
        "description": "Generate a security audit for your n8n instance.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "additionalOptions": {
                    "type": "object",
                    "properties": {
                      "daysAbandonedWorkflow": {
                        "type": "integer"
                      },
                      "categories": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "credentials",
                            "database",
                            "nodes",
                            "filesystem",
                            "instance"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditReport"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/executions": {
      "get": {
        "operationId": "getExecutions",
        "tags": [
          "Execution"
        ],
        "summary": "Retrieve all executions",
        "description": "Retrieve all executions from your instance.",
        "parameters": [
          {
            "$ref": "#/components/parameters/IncludeData"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status to filter the executions by.",
            "schema": {
              "type": "string",
              "enum": [
                "error",
                "success",
                "waiting"
              ]
            }
          },
          {
            "name": "workflowId",
            "in": "query",
            "description": "Workflow to filter the executions by.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/executions/{id}": {
      "get": {
        "operationId": "getExecution",
        "tags": [
          "Execution"
        ],
        "summary": "Retrieve an execution",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/IncludeData"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Execution"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "operationId": "deleteExecution",
        "tags": [
          "Execution"
        ],
        "summary": "Delete an execution",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Execution deleted"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/executions/{id}/retry": {
      "post": {
        "operationId": "retryExecution",
        "tags": [
          "Execution"
        ],
        "summary": "Retry an execution",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Execution retried",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Execution"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/executions/{id}/stop": {
      "post": {
        "operationId": "stopExecution",
        "tags": [
          "Execution"
        ],
        "summary": "Stop an execution",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Execution stopped",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Execution"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/workflows": {
      "get": {
        "operationId": "getWorkflows",
        "tags": [
          "Workflow"
        ],
        "summary": "Retrieve all workflows",
        "parameters": [
          {
            "$ref": "#/components/parameters/Cursor"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "operationId": "createWorkflow",
        "tags": [
          "Workflow"
        ],
        "summary": "Create a new workflow",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Workflow created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/workflows/{id}": {
      "get": {
        "operationId": "getWorkflow",
        "tags": [
          "Workflow"
        ],
        "summary": "Retrieve a workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "patch": {
        "operationId": "updateWorkflow",
        "tags": [
          "Workflow"
        ],
        "summary": "Update a workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflow updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "operationId": "deleteWorkflow",
        "tags": [
          "Workflow"
        ],
        "summary": "Delete a workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow deleted"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/workflows/{id}/activate": {
      "post": {
        "operationId": "activateWorkflow",
        "tags": [
          "Workflow"
        ],
        "summary": "Activate a workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow activated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/workflows/{id}/deactivate": {
      "post": {
        "operationId": "deactivateWorkflow",
        "tags": [
          "Workflow"
        ],
        "summary": "Deactivate a workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow deactivated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/workflows/{id}/execute": {
      "post": {
        "operationId": "executeWorkflow",
        "tags": [
          "Workflow"
        ],
        "summary": "Execute a workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflow executed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Execution"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/credentials": {
      "get": {
        "operationId": "getCredentials",
        "tags": [
          "Credential"
        ],
        "summary": "Retrieve all credentials",
        "parameters": [
          {
            "$ref": "#/components/parameters/Cursor"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "operationId": "createCredential",
        "tags": [
          "Credential"
        ],
        "summary": "Create a new credential",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Credential created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/credentials/{id}": {
      "get": {
        "operationId": "getCredential",
        "tags": [
          "Credential"
        ],
        "summary": "Retrieve a credential",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "patch": {
        "operationId": "updateCredential",
        "tags": [
          "Credential"
        ],
        "summary": "Update a credential",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Credential updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "operationId": "deleteCredential",
        "tags": [
          "Credential"
        ],
        "summary": "Delete a credential",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credential deleted"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/tags": {
      "get": {
        "operationId": "getTags",
        "tags": [
          "Tags"
        ],
        "summary": "Retrieve all tags",
        "parameters": [
          {
            "$ref": "#/components/parameters/Cursor"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "operationId": "createTag",
        "tags": [
          "Tags"
        ],
        "summary": "Create a tag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tag created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        }
      }
    },
    "/tags/{id}": {
      "get": {
        "operationId": "getTag",
        "tags": [
          "Tags"
        ],
        "summary": "Retrieve a tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "patch": {
        "operationId": "updateTag",
        "tags": [
          "Tags"
        ],
        "summary": "Update a tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tag updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "operationId": "deleteTag",
        "tags": [
          "Tags"
        ],
        "summary": "Delete a tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag deleted"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "getUsers",
        "tags": [
          "User"
        ],
        "summary": "Retrieve all users",
        "parameters": [
          {
            "$ref": "#/components/parameters/Cursor"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUser",
        "tags": [
          "User"
        ],
        "summary": "Retrieve a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/variables": {
      "get": {
        "operationId": "getVariables",
        "tags": [
          "Variables"
        ],
        "summary": "Retrieve all variables",
        "parameters": [
          {
            "$ref": "#/components/parameters/Cursor"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VariableList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "operationId": "createVariable",
        "tags": [
          "Variables"
        ],
        "summary": "Create a variable",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Variable"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Variable created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Variable"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/variables/{id}": {
      "get": {
        "operationId": "getVariable",
        "tags": [
          "Variables"
        ],
        "summary": "Retrieve a variable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Variable"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "patch": {
        "operationId": "updateVariable",
        "tags": [
          "Variables"
        ],
        "summary": "Update a variable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Variable"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Variable updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Variable"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "operationId": "deleteVariable",
        "tags": [
          "Variables"
        ],
        "summary": "Delete a variable",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Variable deleted"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/source-control/preferences": {
      "get": {
        "operationId": "getSourceControlPreferences",
        "tags": [
          "SourceControl"
        ],
        "summary": "Get source control preferences",
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceControlPreferences"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "patch": {
        "operationId": "updateSourceControlPreferences",
        "tags": [
          "SourceControl"
        ],
        "summary": "Update source control preferences",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlPreferences"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Preferences updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceControlPreferences"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/source-control/pull": {
      "post": {
        "operationId": "pullWorkflowsFromGit",
        "tags": [
          "SourceControl"
        ],
        "summary": "Pull workflows from Git",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "force": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflows pulled successfully"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/source-control/push": {
      "post": {
        "operationId": "pushWorkflowsToGit",
        "tags": [
          "SourceControl"
        ],
        "summary": "Push workflows to Git",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "fileNames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflows pushed successfully"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/source-control/status": {
      "get": {
        "operationId": "getSourceControlStatus",
        "tags": [
          "SourceControl"
        ],
        "summary": "Get source control status",
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceControlStatus"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/projects": {
      "get": {
        "operationId": "getProjects",
        "tags": [
          "Projects"
        ],
        "summary": "Retrieve all projects",
        "parameters": [
          {
            "$ref": "#/components/parameters/Cursor"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "operationId": "createProject",
        "tags": [
          "Projects"
        ],
        "summary": "Create a project",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "operationId": "getProject",
        "tags": [
          "Projects"
        ],
        "summary": "Retrieve a project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "patch": {
        "operationId": "updateProject",
        "tags": [
          "Projects"
        ],
        "summary": "Update a project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "operationId": "deleteProject",
        "tags": [
          "Projects"
        ],
        "summary": "Delete a project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project deleted"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/workflows/{id}/share": {
      "post": {
        "operationId": "shareWorkflow",
        "tags": [
          "Workflow"
        ],
        "summary": "Share a workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shareWithIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflow shared successfully"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/workflows/{id}/duplicate": {
      "post": {
        "operationId": "duplicateWorkflow",
        "tags": [
          "Workflow"
        ],
        "summary": "Duplicate a workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Workflow duplicated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/workflows/{id}/statistics": {
      "get": {
        "operationId": "getWorkflowStatistics",
        "tags": [
          "Workflow"
        ],
        "summary": "Get workflow statistics",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStatistics"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/credentials/test": {
      "post": {
        "operationId": "testCredential",
        "tags": [
          "Credential"
        ],
        "summary": "Test a credential",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Credential test successful"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/nodes": {
      "get": {
        "operationId": "getNodes",
        "tags": [
          "Workflow"
        ],
        "summary": "Get available nodes",
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NodeType"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/node-types": {
      "get": {
        "operationId": "getNodeTypes",
        "tags": [
          "Workflow"
        ],
        "summary": "Get node types",
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NodeType"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/credential-types": {
      "get": {
        "operationId": "getCredentialTypes",
        "tags": [
          "Credential"
        ],
        "summary": "Get credential types",
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CredentialType"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/workflows/{id}/tags": {
      "get": {
        "operationId": "getWorkflowTags",
        "tags": [
          "Workflow"
        ],
        "summary": "Get workflow tags",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "post": {
        "operationId": "addWorkflowTags",
        "tags": [
          "Workflow"
        ],
        "summary": "Add tags to workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tagIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tags added successfully"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/workflows/{id}/tags/{tagId}": {
      "delete": {
        "operationId": "removeWorkflowTag",
        "tags": [
          "Workflow"
        ],
        "summary": "Remove tag from workflow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag removed successfully"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/executions/{id}/data": {
      "get": {
        "operationId": "getExecutionData",
        "tags": [
          "Execution"
        ],
        "summary": "Get execution data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionData"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/workflows/{id}/executions": {
      "get": {
        "operationId": "getWorkflowExecutions",
        "tags": [
          "Workflow"
        ],
        "summary": "Get workflow executions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/Cursor"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "error",
                "success",
                "waiting"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuditReport": {
        "type": "object",
        "properties": {
          "risk": {
            "type": "string"
          },
          "sections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "recommendation": {
                  "type": "string"
                },
                "location": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string"
                      },
                      "workflowId": {
                        "type": "string"
                      },
                      "workflowName": {
                        "type": "string"
                      },
                      "nodeId": {
                        "type": "string"
                      },
                      "nodeName": {
                        "type": "string"
                      },
                      "nodeType": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Execution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "finished": {
            "type": "boolean"
          },
          "mode": {
            "type": "string"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "stoppedAt": {
            "type": "string",
            "format": "date-time"
          },
          "workflowId": {
            "type": "string"
          },
          "retryOf": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExecutionList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Execution"
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "connections": {
            "type": "object"
          },
          "settings": {
            "$ref": "#/components/schemas/WorkflowSettings"
          },
          "staticData": {
            "oneOf": [
              {
                "type": "string",
                "format": "jsonString",
                "nullable": true
              },
              {
                "type": "object",
                "nullable": true
              }
            ]
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "readOnly": true
          }
        },
        "required": [
          "name"
        ]
      },
      "WorkflowList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workflow"
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Node": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "typeVersion": {
            "type": "number"
          },
          "position": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "parameters": {
            "type": "object"
          }
        }
      },
      "WorkflowSettings": {
        "type": "object",
        "properties": {
          "saveExecutionProgress": {
            "type": "boolean"
          },
          "saveManualExecutions": {
            "type": "boolean"
          },
          "saveDataErrorExecution": {
            "type": "string",
            "enum": [
              "all",
              "none"
            ]
          },
          "saveDataSuccessExecution": {
            "type": "string",
            "enum": [
              "all",
              "none"
            ]
          }
        }
      },
      "Credential": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "writeOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "name",
          "type",
          "data"
        ]
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "name"
        ]
      },
      "CredentialList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Credential"
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TagList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "UserList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Variable": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "string",
              "boolean",
              "number"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "key",
          "value"
        ]
      },
      "VariableList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Variable"
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SourceControlPreferences": {
        "type": "object",
        "properties": {
          "branchName": {
            "type": "string"
          },
          "repositoryUrl": {
            "type": "string"
          },
          "branchReadOnly": {
            "type": "boolean"
          },
          "branchColor": {
            "type": "string"
          }
        }
      },
      "SourceControlStatus": {
        "type": "object",
        "properties": {
          "ahead": {
            "type": "integer"
          },
          "behind": {
            "type": "integer"
          },
          "conflicted": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deleted": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "modified": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "renamed": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "staged": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "Personal",
              "Team"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "ProjectList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WorkflowStatistics": {
        "type": "object",
        "properties": {
          "counts": {
            "type": "object",
            "properties": {
              "executions": {
                "type": "integer"
              },
              "successfulExecutions": {
                "type": "integer"
              },
              "failedExecutions": {
                "type": "integer"
              }
            }
          },
          "lastExecution": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "startedAt": {
                "type": "string",
                "format": "date-time"
              },
              "finished": {
                "type": "boolean"
              },
              "status": {
                "type": "string"
              }
            }
          }
        }
      },
      "NodeType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "defaults": {
            "type": "object"
          },
          "inputs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "outputs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "CredentialType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "documentationUrl": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "displayName": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "required": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "ExecutionData": {
        "type": "object",
        "properties": {
          "resultData": {
            "type": "object",
            "properties": {
              "runData": {
                "type": "object"
              },
              "pinData": {
                "type": "object"
              }
            }
          },
          "executionData": {
            "type": "object",
            "properties": {
              "contextData": {
                "type": "object"
              },
              "nodeExecutionStack": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "metadata": {
                "type": "object"
              },
              "waitingExecution": {
                "type": "object"
              },
              "waitingExecutionSource": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "Cursor": {
        "name": "cursor",
        "in": "query",
        "description": "Pagination cursor",
        "schema": {
          "type": "string"
        }
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 20
        }
      },
      "IncludeData": {
        "name": "includeData",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Invalid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Authentication required",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Conflict": {
        "description": "Resource already exists",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "SourceControlPreferences": {
      "type": "object",
      "properties": {
        "branchName": {
          "type": "string"
        },
        "repositoryUrl": {
          "type": "string"
        },
        "branchReadOnly": {
          "type": "boolean"
        },
        "branchColor": {
          "type": "string"
        }
      }
    },
    "SourceControlStatus": {
      "type": "object",
      "properties": {
        "ahead": {
          "type": "integer"
        },
        "behind": {
          "type": "integer"
        },
        "conflicted": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deleted": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modified": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "renamed": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "staged": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Personal",
            "Team"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "ProjectList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Project"
          }
        },
        "nextCursor": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "WorkflowStatistics": {
      "type": "object",
      "properties": {
        "counts": {
          "type": "object",
          "properties": {
            "executions": {
              "type": "integer"
            },
            "successfulExecutions": {
              "type": "integer"
            },
            "failedExecutions": {
              "type": "integer"
            }
          }
        },
        "lastExecution": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "startedAt": {
              "type": "string",
              "format": "date-time"
            },
            "finished": {
              "type": "boolean"
            },
            "status": {
              "type": "string"
            }
          }
        }
      }
    },
    "NodeType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "defaults": {
          "type": "object"
        },
        "inputs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "CredentialType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "documentationUrl": {
          "type": "string"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "displayName": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "required": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "ExecutionData": {
      "type": "object",
      "properties": {
        "resultData": {
          "type": "object",
          "properties": {
            "runData": {
              "type": "object"
            },
            "pinData": {
              "type": "object"
            }
          }
        },
        "executionData": {
          "type": "object",
          "properties": {
            "contextData": {
              "type": "object"
            },
            "nodeExecutionStack": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "metadata": {
              "type": "object"
            },
            "waitingExecution": {
              "type": "object"
            },
            "waitingExecutionSource": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "securitySchemes": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "X-N8N-API-KEY"
    }
  }
}