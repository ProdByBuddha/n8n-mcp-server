{
  "openapi": "3.0.0",
  "info": {
    "title": "n8n Public API",
    "description": "Standardized public API for n8n automation platform.",
    "version": "1.1.1",
    "contact": {
      "email": "hello@n8n.io"
    },
    "license": {
      "name": "Sustainable Use License",
      "url": "https://github.com/n8n-io/n8n/blob/master/LICENSE.md"
    },
    "termsOfService": "https://n8n.io/legal/terms"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations about users"
    },
    {
      "name": "Audit",
      "description": "Operations about security audit"
    },
    {
      "name": "Execution",
      "description": "Operations about executions"
    },
    {
      "name": "Workflow",
      "description": "Operations about workflows"
    },
    {
      "name": "Credential",
      "description": "Operations about credentials"
    },
    {
      "name": "Tags",
      "description": "Operations about tags"
    },
    {
      "name": "SourceControl",
      "description": "Operations about source control"
    },
    {
      "name": "Variables",
      "description": "Operations about variables"
    },
    {
      "name": "Projects",
      "description": "Operations about projects"
    }
  ],
  "externalDocs": {
    "description": "n8n API documentation",
    "url": "https://docs.n8n.io/api/"
  },
  "paths": {
    "/audit": {
      "post": {
        "operationId": "generateAudit",
        "tags": [
          "Audit"
        ],
        "summary": "Generate an audit",
        "description": "Generate a security audit for your n8n instance.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "additionalOptions": {
                    "type": "object",
                    "properties": {
                      "daysAbandonedWorkflow": {
                        "type": "integer"
                      },
                      "categories": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "credentials",
                            "database",
                            "nodes",
                            "filesystem",
                            "instance"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditReport"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/executions": {
      "get": {
        "operationId": "getExecutions",
        "tags": [
          "Execution"
        ],
        "summary": "Retrieve all executions",
        "description": "Retrieve all executions from your instance.",
        "parameters": [
          {
            "$ref": "#/components/parameters/IncludeData"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status to filter the executions by.",
            "schema": {
              "type": "string",
              "enum": [
                "error",
                "success",
                "waiting"
              ]
            }
          },
          {
            "name": "workflowId",
            "in": "query",
            "description": "Workflow to filter the executions by.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/workflows": {
      "get": {
        "operationId": "getWorkflows",
        "tags": [
          "Workflow"
        ],
        "summary": "Retrieve all workflows",
        "parameters": [
          {
            "$ref": "#/components/parameters/Cursor"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "operationId": "createWorkflow",
        "tags": [
          "Workflow"
        ],
        "summary": "Create a new workflow",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Workflow created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/credentials": {
      "post": {
        "operationId": "createCredential",
        "tags": [
          "Credential"
        ],
        "summary": "Create a new credential",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credential"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Credential created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Credential"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/tags": {
      "post": {
        "operationId": "createTag",
        "tags": [
          "Tags"
        ],
        "summary": "Create a tag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tag created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuditReport": {
        "type": "object",
        "properties": {
          "risk": {
            "type": "string"
          },
          "sections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "recommendation": {
                  "type": "string"
                },
                "location": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string"
                      },
                      "workflowId": {
                        "type": "string"
                      },
                      "workflowName": {
                        "type": "string"
                      },
                      "nodeId": {
                        "type": "string"
                      },
                      "nodeName": {
                        "type": "string"
                      },
                      "nodeType": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Execution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "finished": {
            "type": "boolean"
          },
          "mode": {
            "type": "string"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "stoppedAt": {
            "type": "string",
            "format": "date-time"
          },
          "workflowId": {
            "type": "string"
          },
          "retryOf": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ExecutionList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Execution"
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "connections": {
            "type": "object"
          },
          "settings": {
            "$ref": "#/components/schemas/WorkflowSettings"
          },
          "staticData": {
            "oneOf": [
              {
                "type": "string",
                "format": "jsonString",
                "nullable": true
              },
              {
                "type": "object",
                "nullable": true
              }
            ]
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "readOnly": true
          }
        },
        "required": [
          "name"
        ]
      },
      "WorkflowList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workflow"
            }
          },
          "nextCursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Node": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "typeVersion": {
            "type": "number"
          },
          "position": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "parameters": {
            "type": "object"
          }
        }
      },
      "WorkflowSettings": {
        "type": "object",
        "properties": {
          "saveExecutionProgress": {
            "type": "boolean"
          },
          "saveManualExecutions": {
            "type": "boolean"
          },
          "saveDataErrorExecution": {
            "type": "string",
            "enum": [
              "all",
              "none"
            ]
          },
          "saveDataSuccessExecution": {
            "type": "string",
            "enum": [
              "all",
              "none"
            ]
          }
        }
      },
      "Credential": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "writeOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "name",
          "type",
          "data"
        ]
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "name"
        ]
      }
    },
    "parameters": {
      "Cursor": {
        "name": "cursor",
        "in": "query",
        "description": "Pagination cursor",
        "schema": {
          "type": "string"
        }
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 20
        }
      },
      "IncludeData": {
        "name": "includeData",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Invalid request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Authentication required",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Conflict": {
        "description": "Resource already exists",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-N8N-API-KEY"
      }
    }
  }
}